<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dhcc.ict.manage.loginandregister.dao.CertificateMapper" >
  <resultMap id="BaseResultMap" type="com.dhcc.ict.manage.loginandregister.pojo.Certificate" >
    <constructor >
      <idArg column="certificate_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="certificate_type" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="certificate_acquisition_time" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="certificate_number" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="score" jdbcType="DOUBLE" javaType="java.lang.Double" />
      <arg column="vld" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="user_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
    </constructor>
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.dhcc.ict.manage.loginandregister.pojo.Certificate" >
    <constructor >
      <idArg column="certificate_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="certificate_type" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="certificate_acquisition_time" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="certificate_number" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="score" jdbcType="DOUBLE" javaType="java.lang.Double" />
      <arg column="vld" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="user_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="certificate_annex" jdbcType="VARBINARY" javaType="_byte[]" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    certificate_id, certificate_type, certificate_acquisition_time, certificate_number, 
    score, vld, user_id
  </sql>
  <sql id="Blob_Column_List" >
    certificate_annex
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.dhcc.ict.manage.loginandregister.pojo.CertificateExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from certificate
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.dhcc.ict.manage.loginandregister.pojo.CertificateExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from certificate
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from certificate
    where certificate_id = #{certificateId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from certificate
    where certificate_id = #{certificateId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.dhcc.ict.manage.loginandregister.pojo.CertificateExample" >
    delete from certificate
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.dhcc.ict.manage.loginandregister.pojo.Certificate" >
    insert into certificate (certificate_id, certificate_type, certificate_acquisition_time, 
      certificate_number, score, vld, 
      user_id, certificate_annex)
    values (#{certificateId,jdbcType=INTEGER}, #{certificateType,jdbcType=VARCHAR}, #{certificateAcquisitionTime,jdbcType=VARCHAR}, 
      #{certificateNumber,jdbcType=VARCHAR}, #{score,jdbcType=DOUBLE}, #{vld,jdbcType=VARCHAR}, 
      #{userId,jdbcType=INTEGER}, #{certificateAnnex,jdbcType=VARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="com.dhcc.ict.manage.loginandregister.pojo.Certificate" >
    insert into certificate
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="certificateId != null" >
        certificate_id,
      </if>
      <if test="certificateType != null" >
        certificate_type,
      </if>
      <if test="certificateAcquisitionTime != null" >
        certificate_acquisition_time,
      </if>
      <if test="certificateNumber != null" >
        certificate_number,
      </if>
      <if test="score != null" >
        score,
      </if>
      <if test="vld != null" >
        vld,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="certificateAnnex != null" >
        certificate_annex,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="certificateId != null" >
        #{certificateId,jdbcType=INTEGER},
      </if>
      <if test="certificateType != null" >
        #{certificateType,jdbcType=VARCHAR},
      </if>
      <if test="certificateAcquisitionTime != null" >
        #{certificateAcquisitionTime,jdbcType=VARCHAR},
      </if>
      <if test="certificateNumber != null" >
        #{certificateNumber,jdbcType=VARCHAR},
      </if>
      <if test="score != null" >
        #{score,jdbcType=DOUBLE},
      </if>
      <if test="vld != null" >
        #{vld,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="certificateAnnex != null" >
        #{certificateAnnex,jdbcType=VARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.dhcc.ict.manage.loginandregister.pojo.CertificateExample" resultType="java.lang.Integer" >
    select count(*) from certificate
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update certificate
    <set >
      <if test="record.certificateId != null" >
        certificate_id = #{record.certificateId,jdbcType=INTEGER},
      </if>
      <if test="record.certificateType != null" >
        certificate_type = #{record.certificateType,jdbcType=VARCHAR},
      </if>
      <if test="record.certificateAcquisitionTime != null" >
        certificate_acquisition_time = #{record.certificateAcquisitionTime,jdbcType=VARCHAR},
      </if>
      <if test="record.certificateNumber != null" >
        certificate_number = #{record.certificateNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.score != null" >
        score = #{record.score,jdbcType=DOUBLE},
      </if>
      <if test="record.vld != null" >
        vld = #{record.vld,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.certificateAnnex != null" >
        certificate_annex = #{record.certificateAnnex,jdbcType=VARBINARY},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update certificate
    set certificate_id = #{record.certificateId,jdbcType=INTEGER},
      certificate_type = #{record.certificateType,jdbcType=VARCHAR},
      certificate_acquisition_time = #{record.certificateAcquisitionTime,jdbcType=VARCHAR},
      certificate_number = #{record.certificateNumber,jdbcType=VARCHAR},
      score = #{record.score,jdbcType=DOUBLE},
      vld = #{record.vld,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=INTEGER},
      certificate_annex = #{record.certificateAnnex,jdbcType=VARBINARY}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update certificate
    set certificate_id = #{record.certificateId,jdbcType=INTEGER},
      certificate_type = #{record.certificateType,jdbcType=VARCHAR},
      certificate_acquisition_time = #{record.certificateAcquisitionTime,jdbcType=VARCHAR},
      certificate_number = #{record.certificateNumber,jdbcType=VARCHAR},
      score = #{record.score,jdbcType=DOUBLE},
      vld = #{record.vld,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.dhcc.ict.manage.loginandregister.pojo.Certificate" >
    update certificate
    <set >
      <if test="certificateType != null" >
        certificate_type = #{certificateType,jdbcType=VARCHAR},
      </if>
      <if test="certificateAcquisitionTime != null" >
        certificate_acquisition_time = #{certificateAcquisitionTime,jdbcType=VARCHAR},
      </if>
      <if test="certificateNumber != null" >
        certificate_number = #{certificateNumber,jdbcType=VARCHAR},
      </if>
      <if test="score != null" >
        score = #{score,jdbcType=DOUBLE},
      </if>
      <if test="vld != null" >
        vld = #{vld,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="certificateAnnex != null" >
        certificate_annex = #{certificateAnnex,jdbcType=VARBINARY},
      </if>
    </set>
    where certificate_id = #{certificateId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.dhcc.ict.manage.loginandregister.pojo.Certificate" >
    update certificate
    set certificate_type = #{certificateType,jdbcType=VARCHAR},
      certificate_acquisition_time = #{certificateAcquisitionTime,jdbcType=VARCHAR},
      certificate_number = #{certificateNumber,jdbcType=VARCHAR},
      score = #{score,jdbcType=DOUBLE},
      vld = #{vld,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      certificate_annex = #{certificateAnnex,jdbcType=VARBINARY}
    where certificate_id = #{certificateId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dhcc.ict.manage.loginandregister.pojo.Certificate" >
    update certificate
    set certificate_type = #{certificateType,jdbcType=VARCHAR},
      certificate_acquisition_time = #{certificateAcquisitionTime,jdbcType=VARCHAR},
      certificate_number = #{certificateNumber,jdbcType=VARCHAR},
      score = #{score,jdbcType=DOUBLE},
      vld = #{vld,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER}
    where certificate_id = #{certificateId,jdbcType=INTEGER}
  </update>
</mapper>